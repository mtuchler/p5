int i;
bool b;
struct Point{
    int x;
    int y;
};

struct Number{
    int i;
    bool b;
    int x;
    int Number;
};

int main0() {
    return ((1 + 3) + 5);
}

void main1() {
    int main1;
    int x;
    struct Number n;
    n(Number).i(int) = 1;
    n(Number).b(bool) = true;
    n(Number).x(int) = 3;
    n(Number).Number(int) = 4;
    x(int) = 5;
}

void main2(int param) {
    param(int) = 5;
    i(int) = (6 - main0(->int)());
    return;
}

void main3() {
    int a;
    if (b(bool)) {
        int c;
        c(int) = 5;
    }
    else {
        int c;
        a(int) = 7;
    }
    while (b(bool)) {
        int c;
        a(int) = 9;
    }
    repeat (i(int)) {
        i(int)++;
    }
    if ((b(bool) == true)) {
        i(int) = 0;
    }
    if ((b(bool) != false)) {
        i(int) = 1;
    }
    if ((1 > 0)) {
        i(int) = 2;
    }
    if ((1 < 0)) {
        i(int) = 3;
    }
    if ((1 >= 0)) {
        i(int) = 4;
    }
    if ((1 <= 0)) {
        i(int) = 5;
    }
    cout << 0;
    cout << "string";
    cout << main0(->int)();
    cin >> i(int);
    if ((true && false)) {
    }
    if ((true || false)) {
    }
    if ((!true)) {
    }
}

int main4(int p1, bool p2, int p3, int p4) {
    return p1(int);
}

void main5() {
    main1(->void)();
    main2(int->void)(i(int));
    main3(->void)();
    main4(int,bool,int,int->int)(i(int), b(bool), i(int), i(int));
}

